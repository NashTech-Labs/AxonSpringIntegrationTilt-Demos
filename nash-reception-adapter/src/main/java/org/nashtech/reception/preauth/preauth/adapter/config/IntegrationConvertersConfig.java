package org.nashtech.reception.preauth.preauth.adapter.config;

import org.mapstruct.factory.Mappers;
import org.nashtech.reception.preauth.preauth.adapter.mapper.CheckInMapper;
import org.nashtech.reception.preauth.preauth.adapter.mapper.CheckOutMapper;
import org.nashtech.reception.preauth.preauth.adapter.preauthmessages.CheckInMessage;
import org.nashtech.reception.preauth.preauth.adapter.preauthmessages.CheckOutMessage;
import org.nashtech.reception.preauth.preauth.commands.CheckInCommand;
import org.nashtech.reception.preauth.preauth.commands.CheckOutCommand;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.core.convert.converter.Converter;
import org.springframework.integration.config.IntegrationConverter;

/**
 * Configuration class for registering custom integration converters in Spring Integration.
 *
 * <p>This class defines beans that convert messages into Axon framework commands
 * using custom mappers. The converters are annotated with {@link IntegrationConverter}
 * to indicate their use in message transformation pipelines.</p>
 */
@Configuration
public class IntegrationConvertersConfig {

    /**
     * Defines a converter to transform {@link CheckInMessage} into {@link CheckInCommand}.
     *
     * <p>The converter utilizes a mapper generated by MapStruct to perform the transformation.</p>
     *
     * @return a {@link Converter} instance for converting CheckInMessage to CheckInCommand
     */
    @Bean
    @IntegrationConverter
    public Converter<CheckInMessage, CheckInCommand> checkInCommandConverterConverter() {
        return Mappers.getMapper(CheckInMapper.class);
    }

    /**
     * Defines a converter to transform {@link CheckOutMessage} into {@link CheckOutCommand}.
     *
     * <p>The converter utilizes a mapper generated by MapStruct to perform the transformation.</p>
     *
     * @return a {@link Converter} instance for converting CheckOutMessage to CheckOutCommand
     */
    @Bean
    @IntegrationConverter
    public Converter<CheckOutMessage, CheckOutCommand> checkOutCommandConverterConverter() {
        return Mappers.getMapper(CheckOutMapper.class);
    }

}
